openapi: 3.0.0
info:
  title: React CS Example
  version: 1.0.0
  description: OpenAPI for example of React Cost Savings Component
  contact: {}
tags: []
servers:
  - url: "http://localhost:8080"
security:
  - Session: []
paths:
  /todos:
    get:
      summary: List todo
      description: List todo
      operationId: list-todo
      parameters:
        - name: assignee_eq
          in: query
          descripiton: フィルター条件
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTodoResponse"
              examples:
                example-1:
                  value:
                    - id: id-0
                      title: title-0
                      description: title-0
                      assignee: person-0
                    - id: id-1
                      title: title-1
                      description: title-1
                      assignee: person-1
                    - id: id-2
                      title: title-2
                      description: title-2
                      assignee: person-2
        "400":
          $ref: "#/components/responses/BadRequest"
      tags:
        - todos
    post:
      summary: Create todo
      description: Create todo
      tags:
        - todos
      operationId: post-todo
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TodoRegistration"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
        "400":
          $ref: "#/components/responses/BadRequest"
  "/todos/{todoId}":
    parameters:
      - name: todoId
        in: path
        description: Todo ID
        required: true
        schema:
          type: string
    get:
      summary: Get todo
      description: Get todo
      tags:
        - todos
      operationId: get-todo
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
              examples:
                example-1:
                  value:
                    id: id-0
                    title: title-0
                    description: title-0
                    assignee: person-0
        "404":
          $ref: "#/components/responses/NotFound"
    put:
      summary: Update todo
      description: Update todo
      tags:
        - todos
      operationId: put-todo
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TodoRegistration"
            examples: {}
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
              examples:
                example-1:
                  value:
                    id: id-0
                    title: title-0
                    description: title-0
                    assignee: person-0
        "404":
          $ref: "#/components/responses/NotFound"
    delete:
      summary: Delete todo
      description: Delete todo
      tags:
        - todos
      operationId: delete-todo
      responses:
        "204":
          description: No Content
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
              examples:
                example-1:
                  value:
                    id: id-0
                    title: title-0
                    description: title-0
                    assignee: person-0
        "404":
          $ref: "#/components/responses/NotFound"
components:
  schemas:
    Todo:
      title: Todo
      type: object
      description: Todo
      properties:
        id:
          type: string
          description: Todo Id
        title:
          type: string
          description: Todo title
        description:
          type: string
          description: Todo description
        assignee:
          type: string
          description: Todo assignee
      required:
        - id
        - title
        - description
        - assignee
    TodoRegistration:
      title: TodoRegistration
      type: object
      description: TodoRegistration
      properties:
        title:
          type: string
          description: Todo title
        description:
          type: string
          description: Todo description
        assignee:
          type: string
          description: Todo assignee
      required:
        - title
        - description
        - assignee
    ListTodoResponse:
      title: ListTodoResponse
      type: array
      description: ListTodoResponse
      items:
        $ref: "#/components/schemas/Todo"
    ErrorResponse:
      title: Error
      type: object
      description: Error Response
      properties:
        code:
          type: string
          description: Error code
        message:
          type: string
          description: Error message
      required:
        - code
        - message
  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    Conflict:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    PayloadTooLarge:
      description: Payload Too Large
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    ServiceUnavailable:
      description: Service Unavailable
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
